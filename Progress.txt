Today, 11th July, 2024:
    I have started to code in JavaScript and TypeScript.
    TypeScript is a Superset of JavaScript.
    Well we are also familiar with JavaScript, so JavaScript is a dynamic language.
    TypeScript is a Static language
    What this means is that, in simple terms you don't need to run the entire file (written in JavaScript) to find out bugs and errors, If you code in TypeScript you'll figure out the error while you are writing the code

    I have been following a tutorial on TypeScript from FreeCodeCamp Youtube Channel.
    link : https://www.youtube.com/watch?v=SpwzRDUQ1GI&t=443s&ab_channel=freeCodeCamp.org
    Title : Learn TypeScript - Full Course for Beginners
    Author : Bob Ziroll

    What did i do today ?
    Well, I wrote the code in JavaScript.
    The code was about creating a pizza shop, having a menu, and some functions that allows you to keep a track of price and whether the order is prepared or completed.
    You can also add more pizza's to the list of menu with the price

    And as expected the code had Bugs and Errors.
    So there are ways to run a JavaScript File, So i did try:
        Command Prompt :
            index.js
        Powershell :
            node .\index.js
        JavaScript Debugger:
            index.js
        
    But to make our lives more eassier, I have installed an extension called code runner:
        So just hit the triangle icon and the code runs.
    
    Well there were so many errors as expected, because JavaScript didn't tell me about the errors while i was writing the code. So when the changes are pushed in prodction the app might crash because the error was not known untill it was run.

    So i copied the code from index.js to index.ts and i checked the file was all about words with red underlines highlighting the errors.

    This is going to save out time when we write code in TypeScript.

15 July 2024
    i learned that we have to mention the datatype of the variable in TypeScript
    and we can not assign values of a variable of one type to a value of another type, example if the variable contains an integer so we can not use the same variable for strings
    

16 July, 2024
    Today i learned about the custom object types that we can create in TypeScript
    we can use the 'type' keyword to create an object of our type and then we can put in the variable names with their data types
    and the best feature is that we can nest them inside each-other (nested object types)

    you can create a variable and then specify that it belongs to the custom object type that you have created, this will give all the properties of the custom object to our varible.

    also at any point if you geel that you want one of the features to be optional you can use '?' this mark to mark that part as optional (check the nested_Obj_Types.ts)

    ans we all know that we can configure VS code according to our need and in some way we can run the Typescript files directly without creating a '*.js' file.

    But for now we'll stick with the commands
        1. tsc file.ts
            this will create the javascript version
        2. node file.js
            this will run the javascript version of the file
    
    